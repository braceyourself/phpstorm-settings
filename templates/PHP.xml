<templateSet group="PHP">
  <template name="pf" value="public function $name$($args$){&#10;    $END$&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="args" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
      <option name="PHP Interface Member" value="true" />
      <option name="PHP Trait Member" value="true" />
    </context>
  </template>
  <template name="Test" value="test('$name$', function(){&#10;    // given&#10;    $END$&#10;    // when&#10;    &#10;    // then&#10;}" description="create a phpunit test method" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="psf" value="public static function $function_name$($parameters$){&#10;    $END$&#10;}&#10;" description="public static function" toReformat="false" toShortenFQNames="true">
    <variable name="function_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="parameters" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="case" value="case $value$:&#10;    $expression$&#10;    break;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="expression" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="get" value="/**&#10; * Accessor for $this-&gt;$variable_name$&#10; **/&#10;public function get$studly_variable_name$Attribute()&#10;{&#10;    $END$&#10;}&#10;" description="Create Laravel attribute accessor" toReformat="false" toShortenFQNames="true">
    <variable name="variable_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="studly_variable_name" expression="capitalize(camelCase(variable_name))" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
  <template name="set" value="/**&#10; * Mutator for $this-&gt;$variable$&#10; * @param $value&#10; */&#10;public function set$camel_variable$Attribute($value)&#10;{&#10;    $this-&gt;attributes['$snake_variable$'] = $value;&#10;}&#10;" description="Create Laravel attribute mutator" toReformat="false" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="camel_variable" expression="capitalize(camelCase(variable))" defaultValue="" alwaysStopAt="false" />
    <variable name="snake_variable" expression="snakeCase(variable)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="PHP Class Member" value="true" />
    </context>
  </template>
</templateSet>